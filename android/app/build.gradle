apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs.kotlin'

allOpen {
    annotation 'com.titaniocorp.pos.testing.OpenClass'
}

def credentialsPropertiesFile = rootProject.file("app/credentials.properties")
def credentialsProperties = new Properties()
credentialsProperties.load(new FileInputStream(credentialsPropertiesFile))

android {
    signingConfigs {
        release {
            storeFile file(credentialsProperties['storeFile'])
            storePassword credentialsProperties['storePassword']
            keyPassword credentialsProperties['keyPassword']
            keyAlias credentialsProperties['keyAlias']
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.titaniocorp.pos"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.3.0"
        testInstrumentationRunner "com.titaniocorp.pos.util.AppTestRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField 'String', 'EMAIL_USERNAME', "\"${credentialsProperties['usernameEmail']}\""
        buildConfigField 'String', 'EMAIL_PASSWORD', "\"${credentialsProperties['passwordEmail']}\""
        buildConfigField 'String', 'apiKey', NONE
    }
    buildTypes {
        debug{
            signingConfig signingConfigs.release

            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true

            manifestPlaceholders = [appName:APP_NAME_DEBUG]
            buildConfigField 'String', 'urlBase', NONE

        }
        release {
            signingConfig signingConfigs.release

            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [appName:APP_NAME_RELEASE]
            buildConfigField 'String', 'urlBase', NONE
        }
    }
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        checkAllWarnings true
        warningsAsErrors true
        abortOnError false
    }
    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt'

        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }
    kapt {
        generateStubs = true
    }
}

dependencies {
    def core_version = "1.2.0-rc01"
    def app_compat_version = "1.2.0-alpha01"
    def fragment_ktx_version = "1.2.0-rc03"
    def preference_version = "1.1.0"

    def coroutines_version = "1.3.1"

    def constraintlayout_version = "1.1.3"
    def recyclerview_version = "1.1.0"
    def cardview_version = "1.0.0"

    def material_version = "1.1.0-beta01"

    def lifecycle_version = "2.2.0-rc03"
    def retrofit_version = "2.6.0"
    def logging_interceptor_version = "3.6.0"
    def glide_version = "4.10.0"
    def room_version = "2.2.2"
    def dagger_version = "2.24"
    def leakcanary_version = "2.0-beta-2"
    def timber_version = "4.7.1"

    def testing_version = "1.2.0"
    def core_testing_version = "2.0.1"
    def espresso_core_version = "3.2.0"
    def mockito_version = "3.1.0"
    def mockito_android_version = "2.25.0"
    def live_event_version = "1.2.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    /* Default */
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.preference:preference:$preference_version"

    /* Coroutines */
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    /* View */
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.cardview:cardview:$cardview_version"

    /* Material */
    implementation "com.google.android.material:material:$material_version"

    /* Navigation */
    def navigation_version = "2.3.0-alpha01"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$navigation_version"
    implementation "androidx.navigation:navigation-ui:$navigation_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"

    /* Lifecycle */
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    /* Retrofit */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    /* Glide */
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    /* Room */
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    /* Dagger 2 */
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    /* LeakCanary */
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    /* Timber */
    implementation "com.jakewharton.timber:timber:$timber_version"

    /* Firebase */
    implementation 'com.google.firebase:firebase-core:17.4.0'
    implementation 'com.google.firebase:firebase-analytics:17.4.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    /* Stetho - Debug */
    /*implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'*/

    /* LiveEvent */
    implementation "com.github.hadilq.liveevent:liveevent:$live_event_version"

    implementation 'com.sun.mail:android-mail:1.6.2'
    implementation 'com.sun.mail:android-activation:1.6.2'

    /* Test Unit */
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:core:$testing_version"
    androidTestImplementation "androidx.test:runner:$testing_version"
    androidTestImplementation "androidx.test:rules:$testing_version"
    androidTestImplementation "androidx.test.ext:truth:$testing_version"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "com.google.truth:truth:0.42"

    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    /* Espresso */
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espresso_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_core_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_core_version"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_core_version"

    /* Room */
    androidTestImplementation "androidx.room:room-testing:$room_version"

    /* Mockito */
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android_version"
}